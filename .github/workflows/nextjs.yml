# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      work_dir: "client"
    defaults:
      run:
        working-directory: ${{ env.work_dir }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set package manager
        id: set-package-manager
        run: |
          echo "manager=yarn" >> $GITHUB_OUTPUT
          echo "command=install" >> $GITHUB_OUTPUT
          echo "runner=yarn" >> $GITHUB_OUTPUT
      - name: Enable Corepack
        run: corepack enable
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache-dependency-path: "${{ env.work_dir }}/yarn.lock"
          cache: ${{ steps.set-package-manager.outputs.manager }}
      - name: Setup Pages
        uses: actions/configure-pages@v5
        id: conf-pages
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next
          generator_config_file: "${{ env.work_dir }}/next.config.js"
      - name: Set basePath in siteConfig
        uses: richardrigutins/replace-in-files@v2
        with:
          files: 'client/src/config/consts/site.js'
          search-text: "/* basePathReplaceStart */''/* basePathReplaceEnd */"
          replacement-text: "'${{ steps.conf-pages.outputs.base_path }}'"
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: "${{ env.work_dir }}/.next/cache"
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles(format('{0}/**/yarn.lock', env.work_dir)) }}-${{ hashFiles(format('{0}/**.[jt]s', env.work_dir), format('{0}/**.[jt]sx', env.work_dir)) }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.set-package-manager.outputs.manager }} ${{ steps.set-package-manager.outputs.command }}
      - name: Build with Next.js
        run: ${{ steps.set-package-manager.outputs.runner }} run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "${{ env.work_dir }}/out"

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
