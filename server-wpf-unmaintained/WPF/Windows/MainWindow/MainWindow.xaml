<Window x:Class="GameInv_WPF.WPF.Windows.MainWindow.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ui="http://schemas.inkore.net/lib/ui/wpf/modern"
        ui:WindowHelper.UseModernWindowStyle="True"
        xmlns:controls="clr-namespace:GameInv_WPF.WPF.Controls"
        xmlns:converters="clr-namespace:GameInv_WPF.WPF.Converters"
        xmlns:mainWindow="clr-namespace:GameInv_WPF.WPF.Windows.MainWindow"
        mc:Ignorable="d"
        Title="GameInv WPF" Height="450" Width="800" MinWidth="550" MinHeight="200"
        d:DataContext="{d:DesignInstance Type=mainWindow:MainWindow, IsDesignTimeCreatable=True}"
        Icon="/Resources/favicon.ico" ui:TitleBar.IsIconVisible="True">
    <Window.Resources>
        <converters:DurabilityToPercentageConverter x:Key="DurabilityConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <DataGrid Grid.Row="0" x:Name="ItemsDataGrid" ItemsSource="{Binding Items, Mode=OneWay}"
                  AutoGenerateColumns="False" IsReadOnly="True" VirtualizingPanel.ScrollUnit="Pixel"
                  HeadersVisibility="Column" GridLinesVisibility="Vertical" SelectionMode="Single"
                  SelectionUnit="FullRow" PreviewKeyDown="ItemsDataGrid_OnPreviewKeyDown"
                  MouseDoubleClick="ItemsDataGrid_OnMouseDoubleClick">
            <DataGrid.Resources>
                <Style TargetType="DataGridCell">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="IsTabStop" Value="False" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                <DataGridTextColumn Header="Durability"
                                    Binding="{Binding Durability, Converter={StaticResource DurabilityConverter}}"
                                    Width="Auto" SortMemberPath="Durability" IsReadOnly="True" />
                <DataGridTextColumn Header="Damage per tick" Binding="{Binding DamagePerTick}" Width="Auto" />
                <DataGridTextColumn Header="Damage per use" Binding="{Binding DamagePerUse}" Width="Auto" />

                <DataGridTemplateColumn Header="Actions" Width="Auto" CanUserResize="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="4 0 4 0">
                                <Button x:Name="UseItemButton" Click="UseItemButton_OnClick"
                                        CommandParameter="{Binding}" Margin="0 0 2 0" IsEnabled="{Binding Usable}">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <controls:IconTextControl Icon="{x:Static ui:SegoeFluentIcons.PointerHand}" />
                                        <TextBlock Text="Use" />
                                    </StackPanel>
                                </Button>
                                <Button x:Name="EditItemButton" Click="EditItemButton_OnClick"
                                        CommandParameter="{Binding}" Margin="2 0 0 0">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <controls:IconTextControl Icon="{x:Static ui:SegoeFluentIcons.Edit}" />
                                        <TextBlock Text="Edit" />
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>

        <!-- Remove Use button from bottom bar -->
        <Border Grid.Row="1" Style="{StaticResource CardStyle}" Margin="4 0 4 4" VerticalAlignment="Bottom">
            <UniformGrid Columns="4">
                <Button x:Name="AddItemButton" Click="AddItemButton_OnClick" HorizontalAlignment="Stretch"
                        Margin="0,0,5,0" Padding="5">
                    <controls:IconTextControl Icon="{x:Static ui:SegoeFluentIcons.Add}" Text="Add new item" />
                </Button>
                <Button x:Name="RemoveItemButton" Click="RemoveItemButton_OnClick"
                        HorizontalAlignment="Stretch"
                        Margin="5,0,5,0" Padding="5">
                    <controls:IconTextControl Icon="{x:Static ui:SegoeFluentIcons.Delete}" Text="Remove item" />
                </Button>
                <Button x:Name="TickTimeButton" Click="TickTimeButton_OnClick" HorizontalAlignment="Stretch"
                        Margin="5,0,5,0" Padding="5">
                    <controls:IconTextControl Icon="{x:Static ui:SegoeFluentIcons.Stopwatch}" Text="Tick time" />
                </Button>
                <Button x:Name="ExitButton" Click="ExitButton_OnClick" HorizontalAlignment="Stretch"
                        Margin="5,0,0,0" Padding="5">
                    <controls:IconTextControl Icon="{x:Static ui:SegoeFluentIcons.SignOut}" Text="Exit" />
                </Button>
            </UniformGrid>
        </Border>
    </Grid>
</Window>